2 queries on classes or properties.

    # Query 01: Get all toppings that are a "FishTopping".

    PREFIX pizza: <http://www.co-ode.org/ontologies/pizza/pizza.owl#>
    PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

    SELECT ?topping
    WHERE { 
        ?topping rdfs:subClassOf pizza:FishTopping
    }


    # Query 02: Get all pizzas that have "AnchoviesTopping" topping.
    
    PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
    PREFIX pizza: <http://www.co-ode.org/ontologies/pizza/pizza.owl#>
    PREFIX owl: <http://www.w3.org/2002/07/owl#>

    SELECT DISTINCT ?pizza
    WHERE {
        ?pizza rdfs:subClassOf pizza:NamedPizza .
        ?pizza rdfs:subClassOf ?restriction .
        ?restriction owl:onProperty pizza:hasTopping .
        ?restriction owl:someValuesFrom pizza:AnchoviesTopping .
    }


5 queries on individuals.

    # Query 03: Get all individuals.

    PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
    PREFIX pizza: <http://www.co-ode.org/ontologies/pizza/pizza.owl#>
    PREFIX owl: <http://www.w3.org/2002/07/owl#>

    SELECT ?name
    WHERE {
        ?name rdf:type owl:NamedIndividual .
    }

    # Query 04: Get all individuals that start with a vowel (aeiou).

    PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
    PREFIX pizza: <http://www.co-ode.org/ontologies/pizza/pizza.owl#>
    PREFIX owl: <http://www.w3.org/2002/07/owl#>

    # NOTE: 49 is the length of the predix for pizza, i.e. len('http://www.co-ode.org/ontologies/pizza/pizza.owl#')=49.
    # Below we have 50 so as to start from the first character after the "#" symbol.
    SELECT ?name ?string ?substring
    WHERE {
        ?name rdf:type owl:NamedIndividual .
        BIND(STR(?name) AS ?string) .
        BIND(SUBSTR(?string, 50) AS ?substring) .
        FILTER REGEX (?substring, "^(a|e|i|o|u)", "i") .
    }

    # Query 05: How many pizzas are there from each country?

    PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
    PREFIX pizza: <http://www.co-ode.org/ontologies/pizza/pizza.owl#>
    PREFIX owl: <http://www.w3.org/2002/07/owl#>
    PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

    SELECT ?countryName (COUNT (DISTINCT ?name) AS ?numPizzas)
    WHERE {
        ?name rdfs:subClassOf pizza:NamedPizza, ?restr .
        ?restr owl:onProperty pizza:hasCountryOfOrigin ;
            owl:hasValue ?countryName .
    }
    GROUP BY ?countryName

    # Query 06: What is spiciness of the pizzas in each country?

    PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
    PREFIX pizza: <http://www.co-ode.org/ontologies/pizza/pizza.owl#>
    PREFIX owl: <http://www.w3.org/2002/07/owl#>
    PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

    SELECT DISTINCT ?countryName ?pizzaName ?spiciness
    WHERE {
        ?pizzaName rdfs:subClassOf pizza:NamedPizza,
                                ?restrCountry,
                                ?restrTopping .
        ?restrTopping owl:onProperty pizza:hasTopping ;
                    owl:someValuesFrom ?topping .
        ?topping rdfs:subClassOf ?restrToppingSpiciness.
        ?restrToppingSpiciness owl:onProperty pizza:hasSpiciness ;
                            owl:someValuesFrom ?spiciness .
        ?restrCountry owl:onProperty pizza:hasCountryOfOrigin ;
                    owl:hasValue ?countryName .
    }

    # Query 07: Which countries have pizzas with toppings that are spicy (i.e. that have "Hot" spiciness) and how many are they.

    PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
    PREFIX pizza: <http://www.co-ode.org/ontologies/pizza/pizza.owl#>
    PREFIX owl: <http://www.w3.org/2002/07/owl#>
    PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

    SELECT DISTINCT ?countryName (COUNT(DISTINCT ?pizzaName) AS ?hotPizzaCount)
    WHERE {
        ?pizzaName rdfs:subClassOf pizza:NamedPizza, ?restrCountry, ?restrTopping .
        ?restrTopping owl:onProperty pizza:hasTopping ;
                    owl:someValuesFrom ?topping .
        ?topping rdfs:subClassOf ?restrToppingSpiciness .
        ?restrToppingSpiciness owl:onProperty pizza:hasSpiciness ;
                            owl:someValuesFrom pizza:Hot .
        ?restrCountry owl:onProperty pizza:hasCountryOfOrigin ;
                    owl:hasValue ?countryName .
    }
    GROUP BY ?countryName


3 queries use more than one concept in the knowledge base and use more than once FILTER.

    # Query 08: From all pizzas with names that have more than 5 characters get their names and their toppings which are not "Hot".

    PREFIX pizza: <http://www.co-ode.org/ontologies/pizza/pizza.owl#>
    PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
    PREFIX owl: <http://www.w3.org/2002/07/owl#>

    SELECT DISTINCT ?pizza ?topping
    WHERE {
        ?pizza rdfs:subClassOf pizza:NamedPizza, ?restr .
        ?restr owl:onProperty pizza:hasTopping ;
                owl:someValuesFrom ?topping .
        FILTER NOT EXISTS {
            ?topping rdfs:subClassOf ?restrToppingSpiciness .
            ?restrToppingSpiciness owl:onProperty pizza:hasSpiciness ;
                                owl:someValuesFrom pizza:Hot .
        }
        FILTER ((STRLEN(str(?pizza)) - 49) > 5)
    }
    ORDER BY ?pizza

    # Query 09: Get the names of the pizzas and their toppings that have a meat topping that starts with a consonant and do not have a hot spiced beef topping.

    PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
    PREFIX pizza: <http://www.co-ode.org/ontologies/pizza/pizza.owl#>
    PREFIX owl: <http://www.w3.org/2002/07/owl#>

    SELECT DISTINCT ?pizza ?name
    WHERE {
        ?name rdfs:subClassOf pizza:MeatTopping.
        BIND(STR(?name) AS ?string)
        BIND(SUBSTR(?string, 50 ) AS ?substring)
        FILTER(REGEX(?substring, "^[^(a|e|i|o|u)]", "i"))
            
        ?pizza rdfs:subClassOf pizza:NamedPizza, ?restrTopping.
        ?restrTopping owl:onProperty pizza:hasTopping;
                        owl:someValuesFrom ?name.
        FILTER NOT EXISTS {
            ?pizza rdfs:subClassOf pizza:NamedPizza, ?restrTopping.
            ?restrTopping owl:onProperty pizza:hasTopping;
                        owl:someValuesFrom pizza:HotSpicedBeefTopping.
        }
    }

    # Query 10: Get the names of the non-american pizzas and their toppings that have either tomato or mushroom topping.

    PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
    PREFIX pizza: <http://www.co-ode.org/ontologies/pizza/pizza.owl#>
    PREFIX owl: <http://www.w3.org/2002/07/owl#>

    SELECT ?pizzaName ?toppingName
    WHERE {
        ?pizzaName rdfs:subClassOf pizza:NamedPizza, ?restrTopping .
        ?restrTopping owl:onProperty pizza:hasTopping ;
                    owl:someValuesFrom ?toppingName .
        
        FILTER NOT EXISTS {
            ?restrTopping owl:someValuesFrom pizza:TomatoTopping .
        }
        FILTER NOT EXISTS {
            ?restrTopping owl:someValuesFrom pizza:MushroomTopping .
        }
        FILTER NOT EXISTS {
            ?pizzaName rdfs:subClassOf ?restrCountry .
            ?restrCountry owl:onProperty pizza:hasCountryOfOrigin ;
                        owl:hasValue pizza:America .
        }
    }


3 queries that demonstrate the reasoning in the database, meaning that when reasoning is on there are more results extracted, compared to when reasoning is off.

    # Query 11: Get the names of the toppings and the pizzas that have a topping with a name that starts with a consonant but ends with a vowel.

    PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
    PREFIX pizza: <http://www.co-ode.org/ontologies/pizza/pizza.owl#>
    PREFIX owl: <http://www.w3.org/2002/07/owl#>
    PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

    SELECT DISTINCT ?pizza ?name
    WHERE {
        ?name rdfs:subClassOf pizza:PizzaTopping.
        BIND(STR(?name) as ?string) .
        BIND(SUBSTR(?string, 50) as ?substring) .
        FILTER REGEX (?substring, "^[^(a|e|i|o|u)]", "i") .
        FILTER REGEX (?substring, "(a|e|i|o|u)$", "i") .
        
        ?pizza rdfs:subClassOf pizza:NamedPizza,
                               ?restrTopping .
        ?restrTopping owl:onProperty pizza:hasTopping ;
                      owl:someValuesFrom ?name .
    }

    # Query 12: Get the names of the pizzas that have a country of originate from Italy.

    PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
    PREFIX pizza: <http://www.co-ode.org/ontologies/pizza/pizza.owl#>
    PREFIX owl: <http://www.w3.org/2002/07/owl#>
    PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

    SELECT DISTINCT ?pizzaName
    WHERE {
        ?pizzaName rdfs:subClassOf pizza:Pizza,
                                   ?restrCountry .
        ?restrCountry owl:onProperty pizza:hasCountryOfOrigin ;
                      owl:hasValue pizza:Italy .
    }

    # Query 13: Get the names of the pizzas that have a thin and crispy base.

    PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
    PREFIX pizza: <http://www.co-ode.org/ontologies/pizza/pizza.owl#>
    PREFIX owl: <http://www.w3.org/2002/07/owl#>
    PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

    SELECT DISTINCT ?pizzaName
    WHERE
    {
        ?pizzaName rdfs:subClassOf pizza:Pizza.
        ?restrBase owl:onProperty pizza:hasBase ;
                   owl:allValuesFrom pizza:ThinAndCrispyBase.
    }
